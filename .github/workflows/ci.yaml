name: Lint, Test, Build, Eventually publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint-test-build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Run tests and generate coverage
      - name: Build & Test
        run: |
          docker build --tag ngx-mdx .

          docker run --rm \
            --volume "$PWD:/opt/tmp" \
            --user "$(id -u):$(id -g)" \
            ngx-mdx cp --recursive /opt/app/coverage /opt/tmp
          docker run --rm \
            --volume "$PWD:/opt/tmp" \
            --user "$(id -u):$(id -g)" \
            ngx-mdx cp --recursive /opt/app/dist /opt/tmp

          VERSION="$(jq -r '.version' projects/ngx-mdx/package.json)"
          if [[ 404 == "$(curl --silent --output /dev/null --write-out "%{http_code}" 'https://www.npmjs.com/package/ngx-mdx/v/$VERSION')" ]]; then
            echo "VERSION=v$VERSION" >> $GITHUB_ENV
            tar -cvzf "ngx-mdx-v$VERSION.tar.gz" dist/ngx-mdx
          else
            echo "[WARNING] Latest version - v$VERSION - already published." >&2
          fi

      # Export code coverage statistics
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/ngx-mdx/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          name: ngx-mdx

      # Eventually release it as an archive for those interested
      - name: Release
        if: ${{ env.VERSION }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./ngx-mdx-${{ env.VERSION }}.tar.gz
          tag_name: ${{ env.VERSION }}
          generate_release_notes: true
          prerelease: false
          draft: false

      # Publish to npm registry
      - name: Publish
        if: ${{ env.VERSION }}
        run: |
          docker run --rm \
            --env "NPM_TOKEN=${{ secrets.NPM_TOKEN }}" \
            --workdir /opt/app/dist/ngx-mdx ngx-mdx sh -c \
            'pnpm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN && pnpm publish --access public'
